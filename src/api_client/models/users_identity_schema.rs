/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// UsersIdentitySchema : Schema for successful response from users.identity method



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UsersIdentitySchema {
    #[serde(rename = "temp_oneof_00", skip_serializing_if = "Option::is_none")]
    pub temp_oneof_00: Option<Box<crate::api_client::models::UsersIdentitySchemaTempOneof00>>,
    #[serde(rename = "temp_oneof_01", skip_serializing_if = "Option::is_none")]
    pub temp_oneof_01: Option<Box<crate::api_client::models::UsersIdentitySchemaTempOneof01>>,
    #[serde(rename = "temp_oneof_02", skip_serializing_if = "Option::is_none")]
    pub temp_oneof_02: Option<Box<crate::api_client::models::UsersIdentitySchemaTempOneof02>>,
    #[serde(rename = "temp_oneof_03", skip_serializing_if = "Option::is_none")]
    pub temp_oneof_03: Option<Box<crate::api_client::models::UsersIdentitySchemaTempOneof03>>,
}

impl UsersIdentitySchema {
    /// Schema for successful response from users.identity method
    pub fn new() -> UsersIdentitySchema {
        UsersIdentitySchema {
            temp_oneof_00: None,
            temp_oneof_01: None,
            temp_oneof_02: None,
            temp_oneof_03: None,
        }
    }
}


