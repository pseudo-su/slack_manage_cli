/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * Contact: support@slack.com
 * Generated by: https://openapi-generator.tech
 */

/// UsersListResponseBody : Schema for successful response from users.list method



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UsersListResponseBody {
    #[serde(rename = "cache_ts")]
    pub cache_ts: f32,
    #[serde(rename = "members")]
    pub members: Vec<crate::api_client::models::UsersListMember>,
    #[serde(rename = "ok")]
    pub ok: bool,
    #[serde(rename = "response_metadata")]
    pub response_metadata: Box<crate::api_client::models::ConversationsListResponseBodyResponseMetadata>,
}

impl UsersListResponseBody {
    /// Schema for successful response from users.list method
    pub fn new(cache_ts: f32, members: Vec<crate::api_client::models::UsersListMember>, ok: bool, response_metadata: crate::api_client::models::ConversationsListResponseBodyResponseMetadata) -> UsersListResponseBody {
        UsersListResponseBody {
            cache_ts,
            members,
            ok,
            response_metadata: Box::new(response_metadata),
        }
    }
}


