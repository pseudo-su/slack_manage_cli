/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ReactionsGetSuccessSchemaTempOneof02 {
    #[serde(rename = "file")]
    pub file: Box<crate::api_client::models::ObjsFile>,
    #[serde(rename = "ok")]
    pub ok: crate::api_client::models::DefsOkTrue,
    #[serde(rename = "type")]
    pub _type: Type,
}

impl ReactionsGetSuccessSchemaTempOneof02 {
    pub fn new(file: crate::api_client::models::ObjsFile, ok: crate::api_client::models::DefsOkTrue, _type: Type) -> ReactionsGetSuccessSchemaTempOneof02 {
        ReactionsGetSuccessSchemaTempOneof02 {
            file: Box::new(file),
            ok,
            _type,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "file")]
    File,
}

impl Default for Type {
    fn default() -> Type {
        Self::File
    }
}

