/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UsersIdentitySchemaTempOneof03Team {
    #[serde(rename = "domain")]
    pub domain: String,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "image_102")]
    pub image_102: String,
    #[serde(rename = "image_132")]
    pub image_132: String,
    #[serde(rename = "image_230")]
    pub image_230: String,
    #[serde(rename = "image_34")]
    pub image_34: String,
    #[serde(rename = "image_44")]
    pub image_44: String,
    #[serde(rename = "image_68")]
    pub image_68: String,
    #[serde(rename = "image_88")]
    pub image_88: String,
    #[serde(rename = "image_default")]
    pub image_default: bool,
    #[serde(rename = "name")]
    pub name: String,
}

impl UsersIdentitySchemaTempOneof03Team {
    pub fn new(domain: String, id: String, image_102: String, image_132: String, image_230: String, image_34: String, image_44: String, image_68: String, image_88: String, image_default: bool, name: String) -> UsersIdentitySchemaTempOneof03Team {
        UsersIdentitySchemaTempOneof03Team {
            domain,
            id,
            image_102,
            image_132,
            image_230,
            image_34,
            image_44,
            image_68,
            image_88,
            image_default,
            name,
        }
    }
}


